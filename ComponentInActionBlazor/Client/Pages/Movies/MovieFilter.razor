@page "/movies/search"
@inject IRepository Repository
<h3>MovieFilter</h3>

<div class="form-group">
    <div class="form-group mb-2">
        <label for="title" class="sr-only">Title</label>
        <input type="text" class="form-control" id="title" placeholder="Movie Title"
        @bind-value="_title"
        @bind-value:event="oninput"
        @onkeypress="@(TitleKeyPress)"
        @onmousedown="@(MiceButtonPress)" autocomplete="nope" />

    </div>
    <div class="form-group mx-sm-3 mb-2">
        <select class="form-control" @bind="_selectedGenre">
            <option value="0">
                --Select Genre
            </option>
            @foreach (var genre in Genres)
            {
                <option value="@genre.Id">@genre.Name</option>
            }
        </select>
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="upcomingReleases" @bind="_upcomingReleases" />

        <label class="form-check-label" for="upcomingReleases">
            Upcoming Releases
        </label>
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="inTheaters" @bind="_inTheaters" />

        <label class="form-check-label" for="upcomingReleases">
            In Theaters
        </label>
    </div>

    <button type="button" class="btn btn-primary mb-2 mx-sm-3" @onclick="SearchForMovies">Filter</button>
    <button type="button" class="btn btn-danger mb-2 mx-sm-3" @onclick="Clear">Clear</button>
</div>

<MoviesList Movies="Movies"></MoviesList>

@code {
    string _title = string.Empty;
    string _selectedGenre = "0";
    private List<Genre> Genres = new List<Genre>() { new Genre() { Id = 1, Name = "XXX" }, new Genre() { Id = 2, Name = "XXX2" } };
    bool _upcomingReleases = false;
    bool _inTheaters = false;

    private List<Movie> Movies;

    protected override async Task OnInitializedAsync()
    {
        //await Task.Delay(1000);
        Movies = await Repository.GetMovies();
    }

    private async Task TitleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchForMovies();
        }
    }

    private async Task Clear()
    {
        Movies = await Repository.GetMovies();
        _title = "";
        _selectedGenre = "0";
        _upcomingReleases = false;
        _inTheaters = false;
    }

    private async Task SearchForMovies()
    {
        var mov = await Repository.GetMovies();
        Movies = mov.Where(x => x.Title.Contains(_title)).ToList();
        Console.WriteLine($"_title:{_title}");
        Console.WriteLine($"_selectedGenre:{_selectedGenre}");
        Console.WriteLine($"_upcomingReleases:{_upcomingReleases}");
        Console.WriteLine($"_inTheaters:{_inTheaters}");
    }

    private void MiceButtonPress(MouseEventArgs obj)
    {
        if (obj.Button is 3 or 4)
        {
            return;
        }

    }

}
